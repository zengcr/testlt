# 熟悉的
use       (\u) Use another database. Takes database name as argument.	--切换数据库

delimiter (\d) Set statement delimiter.		--设置命令终止符，缺省为；
prompt    (\R) Change your mysql prompt.	--改变mysql的提示符
status    (\s) Get status information from the server.		--获得状态信息
print     (\p) Print current command.

notee     (\t) Don't write into outfile.			--关闭输出到文件
tee       (\T) Set outfile [to_outfile]. Append everything into given outfile.	--操作结果输出到文件

?         (\?) Synonym for `help'.
help      (\h) Display this help.
exit      (\q) Exit mysql. Same as quit.	--退出mysql
quit      (\q) Quit mysql.
# 不熟悉的
List of all MySQL commands:
Note that all text commands must be first on line and end with ';'
clear     (\c) Clear the current input statement.	--清除当前输入的语句
connect   (\r) Reconnect to the server. Optional arguments are db and host. 	--重新连接，通常用于被剔除或异常断开后重新连接
ego       (\G) Send command to mysql server, display result vertically.		--控制结果显示为垂直显示
go        (\g) Send command to mysql server.		--发送命令到mysql服务 
rehash    (\#) Rebuild completion hash.
source    (\.) Execute an SQL script file. Takes a file name as an argument.	--执行脚本文件
charset   (\C) Switch to another charset. Might be needed for processing binlog with multi-byte charsets.	--设置字符集 
warnings  (\W) Show warnings after every statement								--打印警告信息
nowarning (\w) Don't show warnings after every statement.
resetconnection(\x) Clean session context.

在Windows上操作MySQL:
启动：NET START mysql                  
停止：NET STOP mysql
杀死MySQL服务器：C:\mysql\bin\mysqladmin -u root shutdown

# 常用命令
mysql –h 主机名 –u 用户名 –p 用户密码          连接MySQL服务器
当前是哪个数据库		mysql> SELECT DATABASE();
当前数据库包含哪些表	mysql> SHOW TABLES;
查看表结构				mysql> DESCRIBE 表名;
查看服务器上当前存在什么数据库	mysql> SHOW DATABASES;
创建数据库				mysql> CREATE DATABASE 库名；
创建数据库中的表		create table TABLENAME (NAME1 int, NAME2 char(10), …… );
重命名表				mysql > alter table t1 rename t2;
备份数据库				shell> mysqldump -h host -u root -p dbname >dbname_backup.sql
恢复数据库				shell> mysqladmin -h myhost -u root -p create dbname
删除数据库前，有提示	mysqladmin drop databasename；
直接删除数据库，不提醒	drop database name
	
# Mysql 常见操作 https://www.cnblogs.com/pycode/p/mysql-orm.html
## 数据库操作

创建数据库
　　　　create database fuzjtest

删除数据库
　　　　drop database fuzjtest

查询数据库
　　　　show databases

切换数据库
　　　　use database 123123 ###用户授权

创建用户
　　　　create user '用户名'@'IP地址' identified by '密码';

删除用户
　　　　drop user '用户名'@'IP地址';

修改用户
　　　　rename user '用户名'@'IP地址' to '新用户名'@'IP地址';

修改密码
　　　　set password for '用户名'@'IP地址' = Password('新密码')

查看权限
　　　　show grants for '用户'@'IP地址'

授权
　　　　grant 权限 on 数据库.表 to '用户'@'IP地址'

取消权限
		revoke 权限 on 数据库.表 from '用户'@'IP地址'

PS：用户权限相关数据保存在mysql数据库的user表中，所以也可以直接对其进行操作（不建议）
授权数据库


查看数据库中某张表有多少条数据：
	select count(*) from test;
	
查询某个数据库的所有表和表中有多少行：
	use information_schema; 
	select table_name,table_rows from tables where TABLE_SCHEMA = 'databaseName' order by table_rows desc; 
	
更新表中的某个字段：
	update table_name		# 更新的表
	set column_name=value	# 列名和新值
	where column_name=value	# 确定要更新的过滤条件

删除表中的某行：
	delete from table_name	# 指定删除数据的表名
	where column_name=value	# 过滤要删除的行















mysql> help show;
Name: 'SHOW'
Description:
SHOW has many forms that provide information about databases, tables,
columns, or status information about the server. This section describes
those following:
SHOW DATABASES [like_or_where]
SHOW [FULL] TABLES [FROM db_name] [like_or_where]
SHOW [FULL] COLUMNS FROM tbl_name [FROM db_name] [like_or_where]
SHOW INDEX FROM tbl_name [FROM db_name]
SHOW CHARACTER SET [like_or_where]						# 显示字符编码设置
SHOW [STORAGE] ENGINES
SHOW GRANTS FOR user
SHOW PRIVILEGES
SHOW [GLOBAL | SESSION] VARIABLES [like_or_where]


SHOW CREATE DATABASE db_name
SHOW CREATE TABLE tbl_name
SHOW CREATE VIEW view_name
SHOW CREATE TRIGGER trigger_name
SHOW CREATE PROCEDURE proc_name
SHOW CREATE FUNCTION func_name
SHOW CREATE EVENT event_name


SHOW [GLOBAL | SESSION] STATUS [like_or_where]
SHOW TABLE STATUS [FROM db_name] [like_or_where]
SHOW FUNCTION STATUS [like_or_where]
SHOW PROCEDURE STATUS [like_or_where]
SHOW ENGINE engine_name {STATUS | MUTEX}

SHOW TRIGGERS [FROM db_name] [like_or_where]
SHOW [FULL] PROCESSLIST
SHOW EVENTS
SHOW FUNCTION CODE func_name
SHOW PROCEDURE CODE proc_name

SHOW MASTER STATUS
SHOW SLAVE HOSTS
SHOW SLAVE STATUS [FOR CHANNEL channel]


SHOW {BINARY | MASTER} LOGS
SHOW PLUGINS
SHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n]
SHOW PROFILES
SHOW COLLATION [like_or_where]


SHOW OPEN TABLES [FROM db_name] [like_or_where]
SHOW ERRORS [LIMIT [offset,] row_count]
SHOW WARNINGS [LIMIT [offset,] row_count]
SHOW BINLOG EVENTS [IN 'log_name'] [FROM pos] [LIMIT [offset,] row_count]
SHOW RELAYLOG EVENTS [IN 'log_name'] [FROM pos] [LIMIT [offset,] row_count]
like_or_where:
    LIKE 'pattern'
  | WHERE expr

If the syntax for a given SHOW statement includes a LIKE 'pattern'
part, 'pattern' is a string that can contain the SQL % and _ wildcard
characters. The pattern is useful for restricting statement output to
matching values.

Several SHOW statements also accept a WHERE clause that provides more
flexibility in specifying which rows to display. See
http://dev.mysql.com/doc/refman/5.7/en/extended-show.html.

URL: http://dev.mysql.com/doc/refman/5.7/en/show.html


## MySQL授权
MySQL中有很多的基本命令，show命令也是其中之一，在很多使用者中对show命令的使用还容易产生混淆，本文汇集了show命令的众多用法。 
1. show tables或show tables from database_name; -- 显示当前数据库中所有表的名称。 
2. show databases; -- 显示mysql中所有数据库的名称。 
3. show columns from table_name from database_name; 或show columns from database_name.table_name; -- 显示表中列名称。 
4. show grants for user_name; -- 显示一个用户的权限，显示结果类似于grant 命令。 
5. show index from table_name; -- 显示表的索引。 
6. show status; -- 显示一些系统特定资源的信息，例如，正在运行的线程数量。 
7. show variables; -- 显示系统变量的名称和值。 
8. show processlist; -- 显示系统中正在运行的所有进程，也就是当前正在执行的查询。大多数用户可以查看他们自己的进程，但是如果他们拥有process权限，就可以查看所有人的进程，包括密码。 
9. show table status; -- 显示当前使用或者指定的database中的每个表的信息。信息包括表类型和表的最新更新时间。 
10. show privileges; -- 显示服务器所支持的不同权限。 
11. show create database database_name; -- 显示create database 语句是否能够创建指定的数据库。 
12. show create table table_name; -- 显示create database 语句是否能够创建指定的数据库。 
13. show engines; -- 显示安装以后可用的存储引擎和默认引擎。 
14. show innodb status; -- 显示innoDB存储引擎的状态。 
15. show logs; -- 显示BDB存储引擎的日志。 
16. show warnings; -- 显示最后一个执行的语句所产生的错误、警告和通知。 
17. show errors; -- 只显示最后一个执行语句所产生的错误。 
18. show [storage] engines; --显示安装后的可用存储引擎和默认引擎。

## MySQL授权
mysql中可以给你一个用户授予如select,insert,update,delete等其中的一个或者多个权限,主要使用grant命令,用法格式为： 
grant 权限 on 数据库对象 to 用户 
一、grant 普通数据用户，查询、插入、更新、删除 数据库中所有表数据的权利。 
grant select on testdb.* to common_user@’%’ 
grant insert on testdb.* to common_user@’%’ 
grant update on testdb.* to common_user@’%’ 
grant delete on testdb.* to common_user@’%’ 
或者，用一条 MySQL 命令来替代： 
grant select, insert, update, delete on testdb.* to common_user@’%’

二、grant 数据库开发人员，创建表、索引、视图、存储过程、函数。。。等权限。 
grant 创建、修改、删除 MySQL 数据表结构权限。 
grant create on testdb.* to developer@’192.168.0.%’; 
grant alter on testdb.* to developer@’192.168.0.%’; 
grant drop on testdb.* to developer@’192.168.0.%’; 
grant 操作 MySQL 外键权限。 
grant references on testdb.* to developer@’192.168.0.%’; 
grant 操作 MySQL 临时表权限。 
grant create temporary tables on testdb.* to developer@’192.168.0.%’; 
grant 操作 MySQL 索引权限。 
grant index on testdb.* to developer@’192.168.0.%’; 
grant 操作 MySQL 视图、查看视图源代码 权限。 
grant create view on testdb.* to developer@’192.168.0.%’; 
grant show view on testdb.* to developer@’192.168.0.%’; 
grant 操作 MySQL 存储过程、函数 权限。 
grant create routine on testdb.* to developer@’192.168.0.%’; -- now, can show procedure status 
grant alter routine on testdb.* to developer@’192.168.0.%’; -- now, you can drop a procedure 
grant execute on testdb.* to developer@’192.168.0.%’;

三、grant 普通 DBA 管理某个 MySQL 数据库的权限。 
grant all privileges on testdb to dba@’localhost’ 
其中，关键字 “privileges” 可以省略。

四、grant 高级 DBA 管理 MySQL 中所有数据库的权限。 
grant all on *.* to dba@’localhost’

五、MySQL grant 权限，分别可以作用在多个层次上。 
1. grant 作用在整个 MySQL 服务器上： 
grant select on *.* to dba@localhost; -- dba 可以查询 MySQL 中所有数据库中的表。 
grant all on *.* to dba@localhost; -- dba 可以管理 MySQL 中的所有数据库 
2. grant 作用在单个数据库上： 
grant select on testdb.* to dba@localhost; -- dba 可以查询 testdb 中的表。 
3. grant 作用在单个数据表上： 
grant select, insert, update, delete on testdb.orders to dba@localhost; 
4. grant 作用在表中的列上： 
grant select(id, se, rank) on testdb.apache_log to dba@localhost; 
5. grant 作用在存储过程、函数上： 
grant execute on procedure testdb.pr_add to ’dba’@’localhost’ 
grant execute on function testdb.fn_add to ’dba’@’localhost’

六、查看 MySQL 用户权限 
查看当前用户（自己）权限： 
show grants; 
查看其他 MySQL 用户权限： 
show grants for dba@localhost;

七、撤销已经赋予给 MySQL 用户权限的权限。 
revoke 跟 grant 的语法差不多，只需要把关键字 “to” 换成 “from” 即可： 
grant all on *.* to dba@localhost; 
revoke all on *.* from dba@localhost;

八、MySQL grant、revoke 用户权限注意事项 
1. grant, revoke 用户权限后，该用户只有重新连接 MySQL 数据库，权限才能生效。 
2. 如果想让授权的用户，也可以将这些权限 grant 给其他用户，需要选项 “grant option“ 
grant select on testdb.* to dba@localhost with grant option; 
这个特性一般用不到。实际中，数据库权限最好由 DBA 来统一管理。


MySQL建表时，一些约束缩写的含义
PK：primary key 主键
NN：not null	非空
UQ：unique		唯一
AI：autoincrement	自增
UN：unsigned	无符号整数
ZF：zero fill 
B	
G

常见问题：
1、安装 mysql 8.0后；root用户在客户端连接不上：http://binary-space.iteye.com/blog/2412769


## MySQL修改密码的几种方法	https://blog.csdn.net/zcwforali/article/details/60597124
方法1： 用SET PASSWORD命令 （该方法在MySQL8.0环境下执行报语法错误）
首先登录MySQL。 
格式：mysql> set password for 用户名@localhost = password('新密码'); 
例子：mysql> set password for root@localhost = password('123'); 

方法2：用mysqladmin （该方法在MySQL8.0的环境下测试可行）
格式：mysqladmin -u用户名 -p旧密码 password 新密码 
例子：mysqladmin -uroot -p123456 password 123;

方法3：用UPDATE直接编辑user表 
首先登录MySQL。 
mysql> use mysql; 
mysql> update user set password=password('123') where user='root' and host='localhost'; 
mysql> flush privileges; 

方法4：在忘记root密码的时候，可以这样 
以windows为例： 
1. 关闭正在运行的MySQL服务。 
2. 打开DOS窗口，转到mysql\bin目录。 
3. 输入mysqld --skip-grant-tables 回车。--skip-grant-tables 的意思是启动MySQL服务的时候跳过权限表认证。 
4. 再开一个DOS窗口（因为刚才那个DOS窗口已经不能动了），转到mysql\bin目录。 
5. 输入mysql回车，如果成功，将出现MySQL提示符 >。 
6. 连接权限数据库： use mysql; 。 
6. 改密码：update user set password=password("123") where user="root";（别忘了最后加分号） 。 
7. 刷新权限（必须步骤）：flush privileges;　。 
8. 退出 quit。 
9. 注销系统，再进入，使用用户名root和刚才设置的新密码123登录。



## 关于MySQL索引的问题：
https://www.cnblogs.com/zz-tt/p/6609828.html
https://blog.csdn.net/u012099869/article/details/52701220

mysql语句添加索引
1.PRIMARY  KEY（主键索引）
	mysql>ALTER  TABLE  `table_name`  ADD  PRIMARY  KEY (  `column`  ) 
2.UNIQUE(唯一索引)
	mysql>ALTER  TABLE  `table_name`  ADD  UNIQUE (`column` ) 
3.INDEX(普通索引)
	mysql>ALTER  TABLE  `table_name`  ADD  INDEX index_name (  `column`  )
4.FULLTEXT(全文索引)
	mysql>ALTER  TABLE  `table_name`  ADD  FULLTEXT ( `column` )
5.多列索引
	mysql>ALTER  TABLE  `table_name`  ADD  INDEX index_name (  `column1`,  `column2`,  `column3`  )